/*#include <vector>
#include <cmath>
//may remove
#include <boost/tuple/tuple.hpp>
#include <boost/tuple/tuple_io.hpp>
#include <boost/tuple/tuple_comparison.hpp>

// #include "stock/StockSimulation.h"
// #include "bot/Bot.h"
#include "gnuplot-iostream.h"
#include "temporal/TemporalIterator.h"
#include "bot/Position.h"
#include "bot/Trade.h"



void displayStats(time_t start, time_t end){
    std::string sStart=timeToString(start),
                sEnd=timeToString(end);
    std::vector<std::string> timeData;
    std::vector<double> values;
    std::vector<double> values2;
    std::vector<std::pair<std::string,double>> data;
    //Generate X-axis for time
    TemporalIterator iter(start,end,DAILY);
    while(iter.hasNext())
    {
        timeData.push_back(timeToString(iter.next()));
    }

    //Collect stock data
    for(int i = 0; i < timeData.size();i++)
    {
        values.push_back(i * 400);
    }
    //Collect stock data
    for(int i = 0; i < timeData.size();i++)
    {
        values2.push_back(2*i * 100);
    }


    for(int i =0; i < timeData.size(); i++)
    {
        std::string time = timeData[i];
        double y = values[i];
        data.push_back(std::make_pair(time,y));
    }
    boost::tuple<std::vector<std::string>,std::vector<double>> temp;
    temp = boost::make_tuple(timeData, values);
    // std::cout << temp <<std::endl;//.get_head()[0] <<"anflsknflksnfklnflkas" <<std::endl;
    Gnuplot gp;
    gp << "set xdata time\n";
    gp << "set timefmt '%Y-%m-%d'\n";
    gp << "set xrange ['" << sStart <<"':'" << sEnd<< "']\n";
    gp << "set timefmt '%Y-%m-%d'\n";
    gp << "plot '-'  using 1:2 with points title 'test'\n";
    gp.send1d(data);
    //gp.send1d(temp);
    //gp.send1d(boost::make_tuple(timeData, values));


}

int main(){
    time_t start,end;
    start = stringToTime("2013-07-21");
    end = stringToTime("2013-08-22");

    displayStats(start,end);



    return 0;

}
*/
